#!/usr/bin/env bash

[[ -v debug ]] && set -x

# For WSL and Gitbash
transform_path () {
  local cmdpath="$1" # wslpath pr cygpath
  local filepath="${@:2}"

  # Prevent wslpath to error with "wslpath: /some/unix/path"
  sed "s|$cmdpath: ||g" <<< "$("$cmdpath" -aw "$filepath" 2>&1)"
}

# Detect platform
case "$(uname -a)" in
  MINGW*|MSYS*|CYGWIN*|*NT*)
    # Gitbash

    # Trim input string
    item="$(printf "%s" "$@" | sed -E 's/^[[:space:]]*//' | sed -E 's/[[:space:]]*$//')"

    # NOTE: Re-enable if problematic
    # if [ -f "$item" ] || [ -d "$item" ]; then
    #   item="$(transform_path cygpath "$item")"
    #   # item="$(cygpath -aw "$item" 2>&1)"
    # fi


    # Starting using pwsh makes the process to be attached to the shell process
    # instead of being independent
    # pwsh.exe -NoLogo -NonInteractive -NoProfile -Command "Start-Process $item" > /dev/null 2>&1 &

    # NOTE: This could use native start from gitbash
    # This may save path convertion or other workarounds here
    /usr/bin/start "$item"

    # Implementation from /usr/bin/start
    # Should I call that directly?
    # "$COMSPEC" //c start "${@//&/^&}"
    ;;
  *[mM]icrosoft*)
    # WSL 1 or 2

    # Trim input string
    item="$(printf "%s" "$@" | sed -E 's/^[[:space:]]*//' | sed -E 's/[[:space:]]*$//')"

    if [ -f "$item" ] || [ -d "$item" ]; then
      item="$(transform_path wslpath "$item")"
      # item="$(sed "s|wslpath: ||g" <<< "$(wslpath -aw "$item" 2>&1)")"
    fi

    pwsh.exe -NoLogo -NonInteractive -NoProfile -Command "Start-Process $item"
    ;;
  *Android)
    # Termux
    # It also starts with Linux
    # so make sure this is before the Linux case
    termux-open-url "$@"
    ;;
  Linux*)
    # xdg-open "$@" &
    xdg-open "$@" < /dev/null > /dev/null 2>&1 &
    disown
    ;;
  Darwin*)
    open "$@"
    ;;
esac

