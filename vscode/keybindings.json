// Place your key bindings in this file to override the defaults
[
  // Editor key shortcuts to select and edit match (ctrl-d)
  {
    "key": "ctrl+u",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "cursorUndo"
  },
  {
    "key": "ctrl+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.addSelectionToNextFindMatch"
  },
  {
    "key": "ctrl+shift+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.addSelectionToPreviousFindMatch"
  },
  {
    "key": "ctrl+k ctrl+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.moveSelectionToNextFindMatch"
  },
  {
    "key": "ctrl+k ctrl+shift+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.moveSelectionToPreviousFindMatch"
  },

  // Copy/paste keymaps
  {
    "key": "ctrl+shift+v",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "ctrl+shift+c",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus",
    "command": "editor.action.clipboardCopyAction"
  },

  // Vscode UI
  {
    "command": "workbench.action.toggleActivityBarVisibility",
    "key": "ctrl+alt+shift+h"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+alt+h"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel",
    "when": "!(inSearchEditor || searchViewletFocus)"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },

  // Find it faster
  {
    "key": "shift+alt+j",
    "command": "find-it-faster.findFiles"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "find-it-faster.findFilesWithType"
  },
  {
    "key": "shift+alt+u",
    "command": "find-it-faster.findWithinFilesWithType"
  },
  {
    "key": "shift+alt+u",
    "command": "find-it-faster.findWithinFilesWithType"
  },

  // Window resize
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+.",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-.>"
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+,",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-,>"
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+s",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-s>"
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+t",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-t>"
  },

  // // Move between windows
  // {
  //   "command": "vscode-neovim.send",
  //   // the key sequence to activate the binding
  //   "key": "alt+h",
  //   // don't activate during insert mode
  //   "when": "editorTextFocus && neovim.mode != insert",
  //   // the input to send to Neovim
  //   "args": "<A-h>"
  // },
  // {
  //   "command": "vscode-neovim.send",
  //   // the key sequence to activate the binding
  //   "key": "alt+j",
  //   // don't activate during insert mode
  //   "when": "editorTextFocus && neovim.mode != insert",
  //   // the input to send to Neovim
  //   "args": "<A-j>"
  // },
  // {
  //   "command": "vscode-neovim.send",
  //   // the key sequence to activate the binding
  //   "key": "alt+k",
  //   // don't activate during insert mode
  //   "when": "editorTextFocus && neovim.mode != insert",
  //   // the input to send to Neovim
  //   "args": "<A-k>"
  // },
  // {
  //   "command": "vscode-neovim.send",
  //   // the key sequence to activate the binding
  //   "key": "alt+l",
  //   // don't activate during insert mode
  //   "when": "editorTextFocus && neovim.mode != insert",
  //   // the input to send to Neovim
  //   "args": "<A-l>"
  // },

  // Change to the previous edited buffer
  {
    "key": "ctrl+6",
    "command": "-workbench.action.focusSixthEditorGroup"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },

  // Defaults disable
  {
    "key": "ctrl+alt+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },

  // Trigger completion
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+e",
    "command": "hideSuggestWidget",
    "when": "neovim.mode == 'insert' && suggestWidgetVisible && textInputFocus"
    // Copilot
    // "command": "editor.action.inlineSuggest.hide",
    // "when": "editorTextFocus && (inlineEditIsVisible || inlineSuggestionVisible)",
  },
  {
    "key": "ctrl+y",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "editor.action.triggerSuggest",
    "when": "neovim.mode == 'insert' && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },

  // Hide hover window if visible
  {
    "key": "q",
    "command": "editor.action.hideHover",
    "when": "editorHoverFocused"
  },

  // alt-y and alt-e to be handled by nvim
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+y",
    // don't activate during insert mode
    "when": "editorTextFocus && (neovim.mode == 'normal')",
    // the input to send to Neovim
    "args": "<A-y>"
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+e",
    // don't activate during insert mode
    "when": "editorTextFocus && (neovim.mode == 'normal')",
    // the input to send to Neovim
    "args": "<A-e>"
  },

  // Enable signature help in insert mode
  {
    "key": "ctrl+space",
    "command": "-editor.action.triggerSuggest"
  },
  {
    "key": "ctrl+space",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },

  // Commands for scroll in neovim and preserve
  // visual selection
  {
    "key": "ctrl+b",
    "command": "runCommands",
    "args": {
      "commands": [
        { "command": "vscode-neovim.send", "args": "<C-b>" },
        { "command": "editorScroll", "args": { "to": "up", "by": "page" } }
      ]
    },
    "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+u",
    "command": "runCommands",
    "args": {
      "commands": [
        { "command": "vscode-neovim.send", "args": "<C-u>" },
        { "command": "editorScroll", "args": { "to": "up", "by": "halfPage" } }
      ]
    },
    "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+d",
    "command": "runCommands",
    "args": {
      "commands": [
        { "command": "vscode-neovim.send", "args": "<C-d>" },
        { "command": "editorScroll", "args": { "to": "down", "by": "halfPage" } }
      ]
    },
    "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+f",
    "command": "runCommands",
    "args": {
      "commands": [
        { "command": "vscode-neovim.send", "args": "<C-f>" },
        { "command": "editorScroll", "args": { "to": "down", "by": "page" } }
      ]
    },
    "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },

  // Uncomment shift-up/shift-down scroll if not controlled by neovim
  // {
  //   "key": "shift-up",
  //   "command": "runCommands",
  //   "args": {
  //     "commands": [
  //       { "command": "vscode-neovim.send", "args": "<C-u>" },
  //       { "command": "editorScroll", "args": { "to": "up", "by": "halfPage" } }
  //     ]
  //   },
  //   "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // },
  // {
  //   "key": "shift+down",
  //   "command": "runCommands",
  //   "args": {
  //     "commands": [
  //       { "command": "vscode-neovim.send", "args": "<C-d>" },
  //       { "command": "editorScroll", "args": { "to": "down", "by": "halfPage" } }
  //     ]
  //   },
  //   "when": "editorTextFocus && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  // }

  // Moved to vscode to be able to jump from windows
  // not controlled by the nvim buffers
  {
    "key": "alt+h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.navigateUp"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.navigateRight"
  }
]
