#!/usr/bin/env bash

[[ -v debug ]] && set -x

# Get the path as an argument or use brave's as default
# Chromium browsers use NativeMessagingHosts and
# Firefox based browsers use native-messaging-hosts
native_messaging_hosts_path="${1:-$HOME/.config/BraveSoftware/Brave-Browser/NativeMessagingHosts}"

proxy_override="keepassxc-proxy.sh"
keepassxc_proxy_path="/usr/bin/keepassxc-proxy"
replace_path="$native_messaging_hosts_path/org.keepassxc.keepassxc_browser.json"

if ! [ -f "$keepassxc_proxy_path" ]; then
  printf "%s\n" "KeePassXC proxy does not exist: $keepassxc_proxy_path"
  exit 1
fi

# Ref: https://stackoverflow.com/questions/59895/how-do-i-get-the-directory-where-a-bash-script-is-located-from-within-the-script
SOURCE=${BASH_SOURCE[0]}
while [ -L "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
  SOURCE=$(readlink "$SOURCE")
  [[ $SOURCE != /* ]] && SOURCE=$DIR/$SOURCE # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

script_location=$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )
script_override="$script_location/$proxy_override"

if [ -f "$replace_path" ]; then
  printf "%s\n" "Found existing hosts file. Deleting..."
  rm "$replace_path"
fi

json_replacement="
{
    \"allowed_origins\": [
        \"chrome-extension://pdffhmdngciaglkoonimfcmckehcpafo/\",
        \"chrome-extension://oboonakemofpalcgghocfoadofidjkkk/\"
    ],
    \"description\": \"KeePassXC integration with native messaging support\",
    \"name\": \"org.keepassxc.keepassxc_browser\",
    \"path\": \"$script_override\",
    \"type\": \"stdio\"
}
"

printf "%s" "$json_replacement" > "$replace_path"

