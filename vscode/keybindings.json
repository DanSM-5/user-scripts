// Place your key bindings in this file to override the defaults
[
  {
    "key": "ctrl+u",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "cursorUndo",
  },
  {
    "key": "ctrl+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.addSelectionToNextFindMatch",
  },
  {
    "key": "ctrl+shift+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.addSelectionToPreviousFindMatch",
  },
  {
    "key": "ctrl+k ctrl+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.moveSelectionToNextFindMatch",
  },
  {
    "key": "ctrl+k ctrl+shift+d",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
  },
  {
    "key": "ctrl+shift+v",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus",
    "command": "editor.action.clipboardPasteAction",
  },
  {
    "key": "ctrl+shift+c",
    "when": "neovim.init && neovim.mode == insert && editorTextFocus",
    "command": "editor.action.clipboardCopyAction",
  },
  // {
  //   "command": "vscode-neovim.compositeEscape1",
  //   "key": "j",
  //   "when": "neovim.mode == insert && editorTextFocus",
  //   "args": "j",
  // },
  // {
  //   "command": "vscode-neovim.compositeEscape2",
  //   "key": "k",
  //   "when": "neovim.mode == insert && editorTextFocus",
  //   "args": "k",
  // },
  {
    "command": "workbench.action.toggleActivityBarVisibility",
    "key": "ctrl+alt+shift+h",
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+alt+h",
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility",
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.togglePanel",
    "when": "!(inSearchEditor || searchViewletFocus)"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+n",
    "command": "-workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen && neovim.wildMenuVisible || inQuickOpen && neovim.mode != 'cmdline'"
  },
  // Find it faster
  {
    "key": "shift+alt+j",
    "command": "find-it-faster.findFiles"
  },
  {
    "key": "ctrl+shift+alt+j",
    "command": "find-it-faster.findFilesWithType"
  },
  {
    "key": "shift+alt+u",
    "command": "find-it-faster.findWithinFilesWithType"
  },
  {
    "key": "shift+alt+u",
    "command": "find-it-faster.findWithinFilesWithType"
  },
  // vscode-nvim passthrough
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+.",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-.>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+,",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-,>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+s",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-s>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+t",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-t>",
  },

  // Move between windows
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+h",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-h>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+j",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-j>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+k",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-k>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+l",
    // don't activate during insert mode
    "when": "editorTextFocus && neovim.mode != insert",
    // the input to send to Neovim
    "args": "<A-l>",
  },

  // Change to the previous edited buffer
  {
    "key": "ctrl+6",
    "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
    "when": "!activeEditorGroupEmpty"
  },
  {
    "key": "ctrl+6",
    "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
    "when": "inEditorsPicker && inQuickOpen"
  },

  {
    "key": "ctrl+alt+j",
    "command": "-liveshare.join",
    "when": "liveshare:state != 'Joined' && liveshare:state != 'Shared'"
  },
  {
    "key": "ctrl+enter",
    "command": "-github.copilot.generate",
    "when": "editorTextFocus && github.copilot.activated && !commentEditorFocused && !inInteractiveInput && !interactiveEditorFocused"
  },

  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen",
  },
  {
    "key": "ctrl+e",
    "command": "hideSuggestWidget",
    "when": "neovim.mode == 'insert' && suggestWidgetVisible && textInputFocus",
    // Copilot
    // "command": "editor.action.inlineSuggest.hide",
    // "when": "editorTextFocus && (inlineEditIsVisible || inlineSuggestionVisible)",
  },
  {
    "key": "ctrl+y",
    "command": "acceptSelectedSuggestion",
    "when": "acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
  },
  {
    "key": "ctrl+b",
    "command": "editor.action.triggerSuggest",
    "when": "neovim.mode == 'insert' && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },

  {
    "key": "q",
    "command": "editor.action.hideHover",
    "when": "editorHoverFocused",
  },

  // alt-y and alt-e
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+y",
    // don't activate during insert mode
    "when": "editorTextFocus && (neovim.mode == 'normal')",
    // the input to send to Neovim
    "args": "<A-y>",
  },
  {
    "command": "vscode-neovim.send",
    // the key sequence to activate the binding
    "key": "alt+e",
    // don't activate during insert mode
    "when": "editorTextFocus && (neovim.mode == 'normal')",
    // the input to send to Neovim
    "args": "<A-e>",
  }
]
